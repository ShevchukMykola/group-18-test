(function(){"use strict";var h=Object.defineProperty,a=(t,e)=>h(t,"name",{value:e,configurable:!0});function m(){return typeof Window=="undefined"}a(m,"withinWebWorker");class d{constructor(e,r=window){this.replyListeners={},this.routes={},this.receiver=e,this.sender=r,this.sender.onmessage=this.receive.bind(this)}addListener(e,r){this.routes[e]=r}respond(e,r){this.postMessage({id:e,type:"response",payload:r})}isReceiverWebWorker(){return this.receiver instanceof Worker}postMessage(e){m()?self.postMessage(e):this.isReceiverWebWorker()?this.receiver.postMessage(e):this.receiver.postMessage(e,"*")}async listenForReply(e){let r=a(()=>{},"resolveOutside");const s=new Promise(n=>{r=n});return this.replyListeners[e]=r,s}generateId(e){const r=new Date().getTime().toString(),s=Math.random().toString();return`${e}-${r}-${s}`}async post(e,r){const s=this.generateId(e);return this.postMessage({id:s,type:e,payload:r}),this.listenForReply(s)}async receive(e){const{id:r,type:s}=e.data;s==="response"?this.replyListeners[r](e.data):this.routes[s]&&this.routes[s](e.data)}forward(e,...r){for(const s of r)this.addListener(s,async n=>{const o=await e.post(s,n.payload);this.respond(n.id,o.payload)})}}a(d,"Switchboard");var p=Object.defineProperty,l=(t,e)=>p(t,"name",{value:e,configurable:!0});const u=class{run(t,e){const r=new Worker(t.command.id,{credentials:"omit"}),s=new d(r,r);r.onerror=()=>{e.flash("error",`${t.command.name}: something went wrong!`)};const n=setTimeout(()=>{r.terminate(),e.flash("error",`${t.command.name}: timed out!`)},u.timeout);s.addListener("ready",async o=>{s.respond(o.id,t)}),s.addListener("done",()=>{clearTimeout(n)}),s.forward(e,"graphql","flash","confirm","navigate","copyToClipboard")}};let c=u;l(c,"CommandRunner"),c.timeout=1e4;var f=Object.defineProperty,w=(t,e)=>f(t,"name",{value:e,configurable:!0});class i extends d{static setup(e){const r=new i(e),s=new c;r.addListener("runCommand",async n=>{const o=n.payload;s.run(o,r)})}async graphql(e,r){return this.post("graphql",{query:e,variables:r})}async flash(e,r){return this.post("flash",{type:e,message:r})}}w(i,"RunnerToPaletteSwitchboard"),i.setup(window.parent)})();
//# sourceMappingURL=command-runner-f20fa286.js.map
